This application is a bridge between Logitech Media Server (LMS) /
SqueezeBox Server(SBS) and UPnP devices. It allows any UPnP device 
to be used as a normal SqueezeBox device.

===========================================================================
There is now a LMS plugin for automatic installation and easy configuration
http://sourceforge.net/projects/lms-to-upnp/files/stable/repo-sf.xml
- or the version under development -
http://sourceforge.net/projects/lms-to-upnp/files/dev/repo-sf.xml
===========================================================================

===========================================================================
MINIMUM TO READ FOR ADVANCED USE
===========================================================================
If you do not want to RTFM, at least do the following:
- put the application on a LOCAL disk where you have read/write access
- launch it with "-i config.xml" on the command line, and wait 30s till it exits
- launch the application without parameters (type exit to stop it)
- if it does not work try again with firewall disabled 
- ALWAYS start with a very low volume in LMS (some players might play very loud)
- pay at least attention to the following parameters in the config.xml file 

	<stream_length>    : if nothing is played
	<accept_nexturi>   : if playback is stuck in playlist
	<seek_after_pause> : if resume after pause does not restart

Really, have a look at the user guide in /doc

===========================================================================
WHAT VERSION TO CHOOSE
===========================================================================
Download UPnPBridge.zip and in /Bin, there are binaries for Windows, Linux 
(x86 and ARM) and OSX. 

- squeeze2upnp-win.exe, pthreadbc2.dll, cc32160mt.dll : Windows Vista and above
- squeeze2upnp-x86 : Linux (Intel CPU) 32 or 64 bits (see user guide for 64 bits)
- squeeze2upnp-x86-static : same as above, but libc librairies are statically 
linked (must be used on some NAS e.g. Atom-base, that don't have the right libc
available - squeeze2upnp-x86 launch will fail)
- squeeze2upnp-x86-64 : Linux (Intel CPU) 64 bits ONLY
- squeeze2upnp-armv6hf : Linux (ARM v6 CPU, hard float)
- squeeze2upnp-armv6hf-static : same as above, with static libraries
- squeeze2upnp-armv5 : Linux (ARM v5 CPU)
- squeeze2upnp-armv5-static : same as above, with static libraries
- squeeze2upnp-osx-multi: binaries for OSX 10.5+

(Thanks Ralphy for ARM and OSX binaries)

NB: Main tests are on Windows Vista+ and Linux x86 versions. OSX and Linux ARM 
are "as is"

===========================================================================
ADVANCED
===========================================================================
REBUILDING IS NOT NEEDED, but if you want to rebuild, here is what should be 
done. This can be built for Linux, OSX or Windows. My main Windows environment 
is C++ builder, so I've not made a proper makefile. The Linux/OSX makefile is
very hardcoded.


DEPENDENCIES
 - pthread (pthread_win32 on Windows) and dynamically linked
 - libupnp, statically linked

LIBUPNP
 - Under Win32, libupnp is build with the following defines
        WIN32
        UPNP_STATIC_LIB
        UPNP_USE_BCBPP (for C++ builder)
 - Under Linux : N/A

 - The are few changes in libupnp, so the file webserver.c, upnp.h and 
httpreadwrite.c must be taken from here, not from libupnp main repository, 
to rebuild the library

- TCP blocking *must* be disabled otherwise when a upnp player disappears
"non gracefully", it will block other communication for a long delay, creating
a "too many job" log in libupnp and all sort of nasty side effects. When 
launching ./configure, use --disable-blocking_tcp_connections to make sure that
autoconfig.h in the root directory (and in build/inc) have the #define
UPNP_ENABLE_BLOCKING_TCP_CONNECTIONS *not* defined or commented

- It is recommended to make the following changes to config.h (find the 
existing corresponding lines)
	#define MAX_JOBS_TOTAL 200 
	#define GENA_NOTIFICATION_SENDING_TIMEOUT 5
	#define GENA_NOTIFICATION_ANSWERING_TIMEOUT 5

===========================================================================
Main application for Windows Vista + 
 - For compilation, use following defines
        WIN32
        UPNP_STATIC_LIB
        UPNP_USE_BCBPP (for C++ builder)
        NO_CODEC
 - Link with the generated libupnp static lib and ptrhead import lib
 - For runtime
        On C++ builder, requires cc32160mt.dll
        pthread.dll for all compilers
NB: the build rules for WinXP need to be added

===========================================================================
Main application for Linux and OSX
 - For compilation, use following defines
        NO_CODEC
        _FILE_OFFSET_BITS=64
 - Put the 3 libraries of libupnp (found in ./libs) in the Makefile directory
 - For runtime : N/A





